size_t N = lights.size();
vector<ArmorPad> armors;
mutex mtx;

// 只支持一维空间
parallel_for_(
    Range(0, N * (N - 1) / 2),
    [&](const Range& range) {
        for (int idx = range.start; idx < range.end; ++idx) {
            // 反推 (i, j)
            size_t i = 0, j = 0, cnt = 0;
            for (i = 0; i < N - 1; ++i) {
                for (j = i + 1; j < N; ++j) {
                    if (cnt == idx) goto found;
                    ++cnt;
                }
            }
        found:
            ArmorPad armor(lights[i], lights[j]);
            if (armor.isSuitable()) {
                lock_guard<mutex> lock(mtx);
                armors.push_back(armor);
            }
        }
    }
);

配对总数 = (N - 1) + (N - 2) + ... + 1 = N * (N - 1) / 2